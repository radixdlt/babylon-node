radix_workflow(1){
  create_account{
    network = {"network":"localnet", "blockchain":"radix"};
    key = generate_key({"curve_type":"secp256k1"});
    recipient = derive({
      "network_identifier": {{network}},
      "public_key": {{key.public_key}}
    });
    save_account({
      "account_identifier": {{recipient.account_identifier}},
      "keypair": {{key}}
    });
    print_message("recipient:");
    print_message({{recipient}});
  },
  transfer{
    currency = {"symbol":"resource_loc1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxvq32hv", "decimals":18};
    min_balance = "1111000000000000000000";

    // sender account is the one of the prefunded_accounts
    sender = find_balance({
      "minimum_balance":{
        "value": {{min_balance}},
        "currency": {{currency}}
      }
    });
    print_message("sender:");
    print_message({{sender}});

    fee_amount = "22000000000000000000";
    // Negative values are badly interpreted by mesh-cli DSL parser,
    // which might lead to errors such as:
    //   CONSTRUCTION FILE PARSING FAILED!
    //   Message: failed to parse action: the number of missing variables [deposit_amount] > 0: variable undefined
    // Therefore workaround use below approach to specify negative value.
    withdraw_amount = "0" - "33000000000000000000";
    deposit_amount = "33000000000000000000";

    transfer.confirmation_depth = "1";
    transfer.network = {{network}};
    transfer.operations = [
      {
        "operation_identifier":{"index":0},
        "type":"Withdraw",
        "account":{{sender.account_identifier}},
        "amount":{
          "value":{{withdraw_amount}},
          "currency":{{currency}}
        }
      },
      {
        "operation_identifier":{"index":1},
        "type":"Deposit",
        "account":{{recipient.account_identifier}},
        "amount":{
          "value":{{deposit_amount}},
          "currency":{{currency}}
        }
      }
    ];

    print_message("transfer:");
    print_message({{transfer}});
  }
}
