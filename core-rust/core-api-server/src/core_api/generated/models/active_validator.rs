/*
 * Babylon Core API
 *
 * This API is exposed by the Babylon Radix node to give clients access to the Radix Engine, Mempool and State in the node. It is intended for use by node-runners on a private network, and is not intended to be exposed publicly. Heavy load may impact the node's function.  If you require queries against historical ledger state, you may also wish to consider using the [Gateway API](https://betanet-gateway.redoc.ly/). 
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct ActiveValidator {
    /// The Bech32m-encoded human readable version of the component address
    #[serde(rename = "address")]
    pub address: String,
    #[serde(rename = "key")]
    pub key: Box<crate::core_api::generated::models::EcdsaSecp256k1PublicKey>,
    /// A string-encoded decimal representing the validator's voting power for this epoch. This is a snapshot of the amount of XRD staked to the validator at the start of the epoch. 
    #[serde(rename = "stake")]
    pub stake: String,
}

impl ActiveValidator {
    pub fn new(address: String, key: crate::core_api::generated::models::EcdsaSecp256k1PublicKey, stake: String) -> ActiveValidator {
        ActiveValidator {
            address,
            key: Box::new(key),
            stake,
        }
    }
}


