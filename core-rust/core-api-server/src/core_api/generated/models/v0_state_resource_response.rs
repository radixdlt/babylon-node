/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct V0StateResourceResponse {
    #[serde(rename = "manager")]
    pub manager: Option<crate::core_api::generated::models::Substate>, // Using Option permits Default trait; Will always be Some in normal use
    #[serde(rename = "metadata")]
    pub metadata: Option<crate::core_api::generated::models::Substate>, // Using Option permits Default trait; Will always be Some in normal use
    #[serde(rename = "access_rules")]
    pub access_rules: Option<crate::core_api::generated::models::Substate>, // Using Option permits Default trait; Will always be Some in normal use
    #[serde(rename = "vault_access_rules")]
    pub vault_access_rules: Option<crate::core_api::generated::models::Substate>, // Using Option permits Default trait; Will always be Some in normal use
}

impl V0StateResourceResponse {
    pub fn new(manager: crate::core_api::generated::models::Substate, metadata: crate::core_api::generated::models::Substate, access_rules: crate::core_api::generated::models::Substate, vault_access_rules: crate::core_api::generated::models::Substate) -> V0StateResourceResponse {
        V0StateResourceResponse {
            manager: Option::Some(manager),
            metadata: Option::Some(metadata),
            access_rules: Option::Some(access_rules),
            vault_access_rules: Option::Some(vault_access_rules),
        }
    }
}


