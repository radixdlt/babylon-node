/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct GlobalEntityAssignment {
    #[serde(rename = "target_entity_type")]
    pub target_entity_type: crate::core_api::generated::models::EntityType,
    /// The hex-encoded bytes of the target entity id
    #[serde(rename = "target_entity_id_hex")]
    pub target_entity_id_hex: String,
    /// The hex-encoded bytes of the global entity id
    #[serde(rename = "global_entity_id_hex")]
    pub global_entity_id_hex: String,
    /// The hex-encoded bytes of the assigned global address.
    #[serde(rename = "global_address_hex")]
    pub global_address_hex: String,
    /// The Bech32m-encoded human readable version of the assigned global address
    #[serde(rename = "global_address")]
    pub global_address: String,
}

impl GlobalEntityAssignment {
    pub fn new(target_entity_type: crate::core_api::generated::models::EntityType, target_entity_id_hex: String, global_entity_id_hex: String, global_address_hex: String, global_address: String) -> GlobalEntityAssignment {
        GlobalEntityAssignment {
            target_entity_type,
            target_entity_id_hex,
            global_entity_id_hex,
            global_address_hex,
            global_address,
        }
    }
}


