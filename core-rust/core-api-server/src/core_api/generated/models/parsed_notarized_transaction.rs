/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct ParsedNotarizedTransaction {
    #[serde(rename = "notarized_transaction")]
    pub notarized_transaction: Box<crate::core_api::generated::models::NotarizedTransaction>,
    /// Gives if the transaction is statically valid. Note that, even if statically valid, the transaction may still be rejected or fail due to issues at runtime (eg if the loan cannot be repaid). 
    #[serde(rename = "is_statically_valid")]
    pub is_statically_valid: bool,
    /// If the transaction is not statically valid, this gives a reason. 
    #[serde(rename = "validity_error", skip_serializing_if = "Option::is_none")]
    pub validity_error: Option<String>,
}

impl ParsedNotarizedTransaction {
    pub fn new(notarized_transaction: crate::core_api::generated::models::NotarizedTransaction, is_statically_valid: bool) -> ParsedNotarizedTransaction {
        ParsedNotarizedTransaction {
            notarized_transaction: Box::new(notarized_transaction),
            is_statically_valid,
            validity_error: None,
        }
    }
}


