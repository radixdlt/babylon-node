/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, serde::Serialize, serde::Deserialize)]
pub enum EntityType {
    #[serde(rename = "EpochManager")]
    EpochManager,
    #[serde(rename = "ResourceManager")]
    ResourceManager,
    #[serde(rename = "Component")]
    Component,
    #[serde(rename = "Package")]
    Package,
    #[serde(rename = "Vault")]
    Vault,
    #[serde(rename = "KeyValueStore")]
    KeyValueStore,
    #[serde(rename = "Global")]
    Global,
    #[serde(rename = "NonFungibleStore")]
    NonFungibleStore,
    #[serde(rename = "Clock")]
    Clock,

}

impl ToString for EntityType {
    fn to_string(&self) -> String {
        match self {
            Self::EpochManager => String::from("EpochManager"),
            Self::ResourceManager => String::from("ResourceManager"),
            Self::Component => String::from("Component"),
            Self::Package => String::from("Package"),
            Self::Vault => String::from("Vault"),
            Self::KeyValueStore => String::from("KeyValueStore"),
            Self::Global => String::from("Global"),
            Self::NonFungibleStore => String::from("NonFungibleStore"),
            Self::Clock => String::from("Clock"),
        }
    }
}

impl Default for EntityType {
    fn default() -> EntityType {
        Self::EpochManager
    }
}




