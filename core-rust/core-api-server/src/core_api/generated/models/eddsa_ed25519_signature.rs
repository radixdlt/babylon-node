/*
 * Babylon Core API
 *
 * This API is exposed by the Babylon Radix node to give clients access to the Radix Engine, Mempool and State in the node. It is intended for use by node-runners on a private network, and is not intended to be exposed publicly. Heavy load may impact the node's function.  If you require queries against historical ledger state, you may also wish to consider using the [Gateway API](https://betanet-gateway.redoc.ly/). 
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct EddsaEd25519Signature {
    #[serde(rename = "key_type")]
    pub key_type: crate::core_api::generated::models::PublicKeyType,
    /// A hex-encoded EdDSA Ed25519 signature (64 bytes). This is `CONCAT(R, s)` where `R` and `s` are each 32-bytes in padded big-endian format.
    #[serde(rename = "signature_hex")]
    pub signature_hex: String,
}

impl EddsaEd25519Signature {
    pub fn new(key_type: crate::core_api::generated::models::PublicKeyType, signature_hex: String) -> EddsaEd25519Signature {
        EddsaEd25519Signature {
            key_type,
            signature_hex,
        }
    }
}


