/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct ResourceManagerSubstateAllOfAuthRules {
    #[serde(rename = "mint")]
    pub mint: Box<crate::core_api::generated::models::FixedActionAuthRules>,
    #[serde(rename = "burn")]
    pub burn: Box<crate::core_api::generated::models::FixedActionAuthRules>,
    #[serde(rename = "withdraw")]
    pub withdraw: Box<crate::core_api::generated::models::FixedActionAuthRules>,
    #[serde(rename = "deposit")]
    pub deposit: Box<crate::core_api::generated::models::FixedActionAuthRules>,
    #[serde(rename = "update_metadata")]
    pub update_metadata: Box<crate::core_api::generated::models::FixedActionAuthRules>,
    #[serde(rename = "update_non_fungible_data")]
    pub update_non_fungible_data: Box<crate::core_api::generated::models::FixedActionAuthRules>,
}

impl ResourceManagerSubstateAllOfAuthRules {
    pub fn new(mint: crate::core_api::generated::models::FixedActionAuthRules, burn: crate::core_api::generated::models::FixedActionAuthRules, withdraw: crate::core_api::generated::models::FixedActionAuthRules, deposit: crate::core_api::generated::models::FixedActionAuthRules, update_metadata: crate::core_api::generated::models::FixedActionAuthRules, update_non_fungible_data: crate::core_api::generated::models::FixedActionAuthRules) -> ResourceManagerSubstateAllOfAuthRules {
        ResourceManagerSubstateAllOfAuthRules {
            mint: Box::new(mint),
            burn: Box::new(burn),
            withdraw: Box::new(withdraw),
            deposit: Box::new(deposit),
            update_metadata: Box::new(update_metadata),
            update_non_fungible_data: Box::new(update_non_fungible_data),
        }
    }
}


