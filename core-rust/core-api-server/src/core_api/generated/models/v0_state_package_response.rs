/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct V0StatePackageResponse {
    #[serde(rename = "info")]
    pub info: Option<crate::core_api::generated::models::Substate>, // Using Option permits Default trait; Will always be Some in normal use
    #[serde(rename = "royalty_config")]
    pub royalty_config: Option<crate::core_api::generated::models::Substate>, // Using Option permits Default trait; Will always be Some in normal use
    #[serde(rename = "royalty_accumulator")]
    pub royalty_accumulator: Option<crate::core_api::generated::models::Substate>, // Using Option permits Default trait; Will always be Some in normal use
    #[serde(rename = "metadata")]
    pub metadata: Option<crate::core_api::generated::models::Substate>, // Using Option permits Default trait; Will always be Some in normal use
    #[serde(rename = "access_rules")]
    pub access_rules: Option<crate::core_api::generated::models::Substate>, // Using Option permits Default trait; Will always be Some in normal use
}

impl V0StatePackageResponse {
    pub fn new(info: crate::core_api::generated::models::Substate, royalty_config: crate::core_api::generated::models::Substate, royalty_accumulator: crate::core_api::generated::models::Substate, metadata: crate::core_api::generated::models::Substate, access_rules: crate::core_api::generated::models::Substate) -> V0StatePackageResponse {
        V0StatePackageResponse {
            info: Option::Some(info),
            royalty_config: Option::Some(royalty_config),
            royalty_accumulator: Option::Some(royalty_accumulator),
            metadata: Option::Some(metadata),
            access_rules: Option::Some(access_rules),
        }
    }
}


