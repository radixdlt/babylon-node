/*
 * Babylon Core API
 *
 * This API is exposed by the Babylon Radix node to give clients access to the Radix Engine, Mempool and State in the node. It is intended for use by node-runners on a private network, and is not intended to be exposed publicly. Heavy load may impact the node's function.  If you require queries against historical ledger state, you may also wish to consider using the [Gateway API](https://betanet-gateway.redoc.ly/). 
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct Instant {
    /// An integer between `0` and `10^14`, marking the unix timestamp in ms.
    #[serde(rename = "unix_timestamp_ms")]
    pub unix_timestamp_ms: i64,
    /// The RFC 3339 / ISO 8601 string representation of the timestamp. Will always use \"Z\" denoting UTC and include milliseconds. EG: `2023-01-26T18:30:09.453Z`. 
    #[serde(rename = "date_time")]
    pub date_time: String,
}

impl Instant {
    pub fn new(unix_timestamp_ms: i64, date_time: String) -> Instant {
        Instant {
            unix_timestamp_ms,
            date_time,
        }
    }
}


