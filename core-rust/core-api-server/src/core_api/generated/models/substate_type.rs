/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, serde::Serialize, serde::Deserialize)]
pub enum SubstateType {
    #[serde(rename = "EpochManager")]
    EpochManager,
    #[serde(rename = "ResourceManager")]
    ResourceManager,
    #[serde(rename = "ComponentInfo")]
    ComponentInfo,
    #[serde(rename = "ComponentState")]
    ComponentState,
    #[serde(rename = "Package")]
    Package,
    #[serde(rename = "Vault")]
    Vault,
    #[serde(rename = "NonFungible")]
    NonFungible,
    #[serde(rename = "KeyValueStoreEntry")]
    KeyValueStoreEntry,
    #[serde(rename = "Global")]
    Global,

}

impl ToString for SubstateType {
    fn to_string(&self) -> String {
        match self {
            Self::EpochManager => String::from("EpochManager"),
            Self::ResourceManager => String::from("ResourceManager"),
            Self::ComponentInfo => String::from("ComponentInfo"),
            Self::ComponentState => String::from("ComponentState"),
            Self::Package => String::from("Package"),
            Self::Vault => String::from("Vault"),
            Self::NonFungible => String::from("NonFungible"),
            Self::KeyValueStoreEntry => String::from("KeyValueStoreEntry"),
            Self::Global => String::from("Global"),
        }
    }
}

impl Default for SubstateType {
    fn default() -> SubstateType {
        Self::EpochManager
    }
}




