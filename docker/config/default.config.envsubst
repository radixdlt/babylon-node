network.id=$RADIXDLT_NETWORK_ID
network.genesis_data=$RADIXDLT_GENESIS_DATA
network.genesis_data_file=$RADIXDLT_GENESIS_DATA_FILE

node.key.path=$RADIXDLT_VALIDATOR_KEY_LOCATION
node.key.create_if_missing=$RADIXDLT_NODE_KEY_CREATE_IF_MISSING

network.host_ip=$RADIXDLT_HOST_IP_ADDRESS
network.p2p.seed_nodes=$RADIXDLT_NETWORK_SEEDS_REMOTE
network.p2p.use_proxy_protocol=$RADIXDLT_NETWORK_USE_PROXY_PROTOCOL

state_hash_tree.gc.interval_sec=$RADIXDLT_STATE_HASH_TREE_GC_INTERVAL_SEC
state_hash_tree.state_version_history_length=$RADIXDLT_STATE_HASH_TREE_STATE_VERSION_HISTORY_LENGTH

db.location=$RADIXDLT_DB_LOCATION
db.local_transaction_execution_index.enable=$RADIXDLT_DB_LOCAL_TRANSACTION_EXECUTION_INDEX_ENABLE
db.account_change_index.enable=$RADIXDLT_DB_ACCOUNT_CHANGE_INDEX_ENABLE
db.entity_listing_indices.enable=$RADIXDLT_ENTITY_LISTING_INDICES_ENABLE
db.historical_substate_values.enable=$RADIXDLT_DB_HISTORICAL_SUBSTATE_VALUES_ENABLE
db.checkpoints_path=${RADIXDLT_DB_CHECKPOINTS_PATH}

mempool.max_transaction_count=${RADIXDLT_MEMPOOL_MAX_TRANSACTION_COUNT}
mempool.max_memory=${RADIXDLT_MEMPOOL_MAX_MEMORY}
mempool.relayer.interval_ms=${RADIXDLT_MEMPOOL_RELAYER_INTERVAL_MS}
mempool.relayer.max_peers=${RADIXDLT_MEMPOOL_RELAYER_MAX_PEERS}
mempool.relayer.max_relayed_size=${RADIXDLT_MEMPOOL_RELAYER_MAX_RELAYED_SIZE}
mempool.relayer.max_message_transaction_count=${RADIXDLT_MEMPOOL_RELAYER_MAX_MESSAGE_TRANSACTION_COUNT}
mempool.relayer.max_message_payload_size=${RADIXDLT_MEMPOOL_RELAYER_MAX_MESSAGE_PAYLOAD_SIZE}
mempool.reevaluation.interval_ms=${RADIXDLT_MEMPOOL_REEVALUATION_INTERVAL_MS}
mempool.reevaluation.max_count=${RADIXDLT_MEMPOOL_REEVALUATION_MAX_COUNT}

protocol.vertex.max_transaction_count=${RADIXDLT_PROTOCOL_VERTEX_MAX_TRANSACTION_COUNT}
protocol.vertex.max_total_transactions_size=${RADIXDLT_PROTOCOL_VERTEX_MAX_TOTAL_TRANSACTIONS_SIZE}
protocol.vertex.max_total_execution_cost_units_consumed=${RADIXDLT_PROTOCOL_VERTEX_MAX_TOTAL_EXECUTION_COST_UNITS_CONSUMED}
protocol.vertex.max_total_finalization_cost_units_consumed=${RADIXDLT_PROTOCOL_VERTEX_MAX_TOTAL_FINALIZATION_COST_UNITS_CONSUMED}
protocol.custom_config=${RADIXDLT_PROTOCOL_CUSTOM_CONFIG}

api.core.port=$RADIXDLT_CORE_API_PORT
api.core.bind_address=$RADIXDLT_CORE_API_BIND_ADDRESS
api.core.flags.enable_unbounded_endpoints=${RADIXDLT_CORE_API_FLAGS_ENABLE_UNBOUNDED_ENDPOINTS}

api.engine_state.port=$RADIXDLT_ENGINE_STATE_API_PORT
api.engine_state.bind_address=$RADIXDLT_ENGINE_STATE_API_BIND_ADDRESS

api.mesh.enabled=$RADIXDLT_MESH_API_ENABLED
api.mesh.port=$RADIXDLT_MESH_API_PORT
api.mesh.bind_address=$RADIXDLT_MESH_API_BIND_ADDRESS

api.system.port=$RADIXDLT_SYSTEM_API_PORT
api.system.bind_address=$RADIXDLT_SYSTEM_API_BIND_ADDRESS
api.system.enable_db_checkpoint=${RADIXDLT_SYSTEM_API_ENABLE_DB_CHECKPOINT}

api.prometheus.port=$RADIXDLT_PROMETHEUS_API_PORT
api.prometheus.bind_address=$RADIXDLT_PROMETHEUS_API_BIND_ADDRESS

testing_forks.enable=$RADIXDLT_TESTING_FORKS_ENABLE
testing_forks.fork_config_name=$RADIXDLT_TESTING_FORK_CONFIG_NAME

consensus.use_genesis_for_validator_address=$RADIXDLT_CONSENSUS_USE_GENESIS_FOR_VALIDATOR_ADDRESS
consensus.validator_address=$RADIXDLT_CONSENSUS_VALIDATOR_ADDRESS
