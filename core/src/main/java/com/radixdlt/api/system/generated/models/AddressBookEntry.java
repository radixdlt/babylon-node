/*
 * Radix System API - Babylon
 * This API is exposed by the Babylon Radix node to give clients access to information about the node itself, its configuration, status and subsystems.  It is intended for use by node-runners on a private network, and is not intended to be exposed publicly. Heavy load may impact the node's function.  If you require queries against ledger state, you may also wish to consider using the [Core API or Gateway API instead](https://docs-babylon.radixdlt.com/main/apis/api-specification.html). 
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.system.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radixdlt.api.system.generated.models.Address;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * AddressBookEntry
 */
@JsonPropertyOrder({
  AddressBookEntry.JSON_PROPERTY_PEER_ID,
  AddressBookEntry.JSON_PROPERTY_BANNED,
  AddressBookEntry.JSON_PROPERTY_BANNED_UNTIL,
  AddressBookEntry.JSON_PROPERTY_KNOWN_ADDRESSES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AddressBookEntry {
  public static final String JSON_PROPERTY_PEER_ID = "peer_id";
  private String peerId;

  public static final String JSON_PROPERTY_BANNED = "banned";
  private Boolean banned;

  public static final String JSON_PROPERTY_BANNED_UNTIL = "banned_until";
  private Long bannedUntil;

  public static final String JSON_PROPERTY_KNOWN_ADDRESSES = "known_addresses";
  private List<Address> knownAddresses = new ArrayList<>();


  public AddressBookEntry peerId(String peerId) {
    this.peerId = peerId;
    return this;
  }

   /**
   * Get peerId
   * @return peerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PEER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPeerId() {
    return peerId;
  }


  @JsonProperty(JSON_PROPERTY_PEER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPeerId(String peerId) {
    this.peerId = peerId;
  }


  public AddressBookEntry banned(Boolean banned) {
    this.banned = banned;
    return this;
  }

   /**
   * Get banned
   * @return banned
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BANNED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getBanned() {
    return banned;
  }


  @JsonProperty(JSON_PROPERTY_BANNED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBanned(Boolean banned) {
    this.banned = banned;
  }


  public AddressBookEntry bannedUntil(Long bannedUntil) {
    this.bannedUntil = bannedUntil;
    return this;
  }

   /**
   * Get bannedUntil
   * @return bannedUntil
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BANNED_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getBannedUntil() {
    return bannedUntil;
  }


  @JsonProperty(JSON_PROPERTY_BANNED_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBannedUntil(Long bannedUntil) {
    this.bannedUntil = bannedUntil;
  }


  public AddressBookEntry knownAddresses(List<Address> knownAddresses) {
    this.knownAddresses = knownAddresses;
    return this;
  }

  public AddressBookEntry addKnownAddressesItem(Address knownAddressesItem) {
    this.knownAddresses.add(knownAddressesItem);
    return this;
  }

   /**
   * Get knownAddresses
   * @return knownAddresses
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_KNOWN_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Address> getKnownAddresses() {
    return knownAddresses;
  }


  @JsonProperty(JSON_PROPERTY_KNOWN_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKnownAddresses(List<Address> knownAddresses) {
    this.knownAddresses = knownAddresses;
  }


  /**
   * Return true if this AddressBookEntry object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddressBookEntry addressBookEntry = (AddressBookEntry) o;
    return Objects.equals(this.peerId, addressBookEntry.peerId) &&
        Objects.equals(this.banned, addressBookEntry.banned) &&
        Objects.equals(this.bannedUntil, addressBookEntry.bannedUntil) &&
        Objects.equals(this.knownAddresses, addressBookEntry.knownAddresses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(peerId, banned, bannedUntil, knownAddresses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddressBookEntry {\n");
    sb.append("    peerId: ").append(toIndentedString(peerId)).append("\n");
    sb.append("    banned: ").append(toIndentedString(banned)).append("\n");
    sb.append("    bannedUntil: ").append(toIndentedString(bannedUntil)).append("\n");
    sb.append("    knownAddresses: ").append(toIndentedString(knownAddresses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

