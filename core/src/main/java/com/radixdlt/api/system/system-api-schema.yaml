openapi: 3.0.0
info:
  # Should be the release version, and the release display name
  version: 'v1.0.0'
  title: 'Radix System API - Babylon'
  license:
    name: The Radix License, Version 1.0
    url: https://www.radixfoundation.org/licenses/license-v1
  x-logo:
    url: https://docs.radixdlt.com/main/_images/radix-logo-banner.png
    href: https://docs.radixdlt.com
  description: |
    This API is exposed by the Babylon Radix node to give clients access to information about the node itself,
    its configuration, status and subsystems.

    It is intended for use by node-runners on a private network, and is not intended to be exposed publicly.
    Heavy load may impact the node's function.

    If you require queries against ledger state, you may also wish to consider using the
    [Core API or Gateway API instead](https://docs-babylon.radixdlt.com/main/apis/api-specification.html).
servers:
  - url: 'localhost:3334/system'
paths:
  /version:
    get:
      summary: 'Get Version'
      responses:
        '200':
          description: 'Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /identity:
    get:
      summary: 'Get Node Identity'
      responses:
        '200':
          description: 'Node Identity'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /health:
    get:
      summary: 'Get Health'
      responses:
        '200':
          description: 'Health'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /configuration:
    get:
      summary: 'Get Configuration'
      responses:
        '200':
          description: 'System Configuration'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfigurationResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /peers:
    get:
      summary: 'Get Peers'
      responses:
        '200':
          description: 'Peers'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemPeersResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /addressbook:
    get:
      summary: 'Get Address Book'
      responses:
        '200':
          description: 'Address Book'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAddressBookResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  "/network-sync-status":
    get:
      summary: Get Network Sync Status
      description: Returns the current sync status of the node.
      responses:
        '200':
          description: Network Status
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NetworkSyncStatusResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    VersionResponse:
      type: object
      required:
        - version
      properties:
        version:
          type: string
    IdentityResponse:
      type: object
      required:
        - public_key_hex
        - node_address
        - node_uri
        - node_name
        - consensus_status
      properties:
        public_key_hex:
          type: string
          minLength: 66
          maxLength: 66
          description: |
            The hex-encoded compressed ECDSA Secp256k1 public key (33 bytes) which the node is using.
        node_address:
          type: string
          description: |
            The Bech32m-encoded human readable node address, which is a representation of its public key.
        node_uri:
          type: string
          description: |
            The Bech32m-encoded human readable node URI, which is a representation of its public key and IP.
        node_name:
          type: string
          description: |
            The name that the node gives to itself internally, used for (eg) logging.
        node_id:
          type: string
          description: |
            The id that the node gives to itself internally.
        validator_address:
          type: string
          description: |
            The Bech32m-encoded human readable validator address which the node believes it is.
            Depending on node configuration, this was either matched from genesis, or directly configured.
        validator_name:
          type: string
          description: |
            A shortened representation of the configured validator identity, used for (eg) logging.
        consensus_status:
          type: string
          enum:
            - VALIDATING_IN_CURRENT_EPOCH
            - NOT_VALIDATING_IN_CURRENT_EPOCH
            - NOT_CONFIGURED_AS_VALIDATOR
    HealthResponse:
      type: object
      required:
        - status
        - detail
        - recent_self_proposal_miss_statistic
        - current_protocol_version
        - executed_protocol_updates
        - unknown_reported_pending_protocol_updates
      properties:
        status:
          type: string
          enum:
            - BOOTING_PRE_GENESIS
            - SYNCING
            - UP
            - OUT_OF_SYNC
        detail:
          type: string
          description: A human-readable message detailing the `status`.
        recent_self_proposal_miss_statistic:
          $ref: "#/components/schemas/RecentSelfProposalMissStatistic"
        current_protocol_version:
          $ref: "#/components/schemas/ProtocolVersion"
        executed_protocol_updates:
          type: array
          items:
            $ref: "#/components/schemas/ExecutedProtocolUpdate"
        pending_protocol_update:
          $ref: "#/components/schemas/PendingProtocolUpdate"
        unknown_reported_pending_protocol_updates:
          type: array
          items:
            $ref: "#/components/schemas/UnknownReportedPendingProtocolUpdate"
    SystemConfigurationResponse:
      type: object
      required:
        - networking
        - bft
      properties:
        mempool:
          $ref: "#/components/schemas/MempoolConfiguration"
        bft:
          $ref: "#/components/schemas/BFTConfiguration"
        sync:
          $ref: "#/components/schemas/SyncConfiguration"
        networking:
          $ref: "#/components/schemas/NetworkingConfiguration"
    SystemAddressBookResponse:
      type: object
      required:
        - entries
      properties:
        entries:
          type: array
          items:
            $ref: "#/components/schemas/AddressBookEntry"
    SystemPeersResponse:
      type: object
      required:
        - peers
      properties:
        peers:
          type: array
          items:
            $ref: "#/components/schemas/Peer"
    AddressBookEntry:
      type: object
      required:
        - peer_id
        - banned
        - known_addresses
      properties:
        peer_id:
          type: string
        banned:
          type: boolean
        banned_until:
          type: integer
          format: int64
        known_addresses:
          type: array
          items:
            $ref: "#/components/schemas/Address"
    Address:
      type: object
      required:
        - uri
        - failed_handshake
        - last_connection_status
      properties:
        uri:
          type: string
        failed_handshake:
          type: boolean
        last_connection_status:
          type: string
          enum:
            - SUCCESS
            - FAILURE
            - UNKNOWN
    Peer:
      type: object
      required:
        - peer_id
        - channels
      properties:
        peer_id:
          type: string
        channels:
          type: array
          items:
            $ref: "#/components/schemas/PeerChannel"
    PeerChannel:
      type: object
      required:
        - type
        - local_port
        - ip
      properties:
        type:
          type: string
          enum:
            - IN
            - OUT
        local_port:
          type: integer
        ip:
          type: string
        uri:
          type: string
    MempoolConfiguration:
      type: object
      required:
        - max_size
        - throttle
      properties:
        max_size:
          type: integer
        throttle:
          type: integer
          format: int64
    BFTConfiguration:
      type: object
      required:
        - pacemaker_timeout
        - bft_sync_patience
      properties:
        pacemaker_timeout:
          type: integer
          format: int64
        bft_sync_patience:
          type: integer
    SyncConfiguration:
      type: object
      required:
        - sync_check_interval
        - sync_check_max_peers
        - request_timeout
        - ledger_status_update_max_peers_to_notify
        - max_ledger_updates_rate
      properties:
        sync_check_interval:
          type: integer
          format: int64
        sync_check_max_peers:
          type: integer
        request_timeout:
          type: integer
          format: int64
        ledger_status_update_max_peers_to_notify:
          type: integer
        max_ledger_updates_rate:
          type: number
    NetworkingConfiguration:
      type: object
      required:
        - default_port
        - discovery_interval
        - listen_address
        - listen_port
        - broadcast_port
        - peer_connection_timeout
        - max_inbound_channels
        - max_outbound_channels
        - channel_buffer_size
        - peer_liveness_check_interval
        - ping_timeout
        - seed_nodes
        - node_address
      properties:
        default_port:
          type: integer
        discovery_interval:
          type: integer
          format: int64
        listen_address:
          type: string
        listen_port:
          type: integer
        broadcast_port:
          type: integer
        peer_connection_timeout:
          type: integer
        max_inbound_channels:
          type: integer
        max_outbound_channels:
          type: integer
        channel_buffer_size:
          type: integer
        peer_liveness_check_interval:
          type: integer
          format: int64
        ping_timeout:
          type: integer
          format: int64
        seed_nodes:
          type: array
          items:
            type: string
        node_address:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    ProtocolVersion:
      type: string
      description: A name identifying a protocol version.
    ExecutedProtocolUpdate:
      type: object
      required:
        - epoch
        - resultant_protocol_version
      properties:
        epoch:
          type: integer
          format: int64
        resultant_protocol_version:
          $ref: "#/components/schemas/ProtocolVersion"
    PendingProtocolUpdate:
      type: object
      required:
        - protocol_version
        - readiness_signal_status
      properties:
        protocol_version:
          $ref: "#/components/schemas/ProtocolVersion"
        readiness_signal_status:
          type: string
          enum:
            - READINESS_SIGNAL_REQUIRED
            - NO_ACTION_NEEDED
    UnknownReportedPendingProtocolUpdate:
      type: object
      required:
        - protocol_version
        - reported_by
      properties:
        protocol_version:
          $ref: "#/components/schemas/ProtocolVersion"
        reported_by_node_addresses:
          type: array
          items:
            type: string
    RecentSelfProposalMissStatistic:
      type: object
      required:
        - missed_count
        - recent_proposals_tracked_count
      properties:
        missed_count:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          description: A number of missed proposals among [`recent_proposals_tracked_count`] most recent ones.
        recent_proposals_tracked_count:
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
          description: A configured length of proposal miss tracking history.
#################################
# REQUEST: /network-sync-status #
#################################
    NetworkSyncStatusResponse:
      type: object
      required:
        - sync_status
      properties:
        sync_status:
          $ref: "#/components/schemas/SyncStatus"
    SyncStatus:
      type: object
      description: Information on how synced the node is to the rest of the network.
      required:
        - current_state_version
        - target_state_version
      properties:
        current_state_version:
          type: integer
          format: int64
        target_state_version:
          type: integer
          format: int64