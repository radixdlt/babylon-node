openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Radix System API'
servers:
  - url: 'localhost:3333/system'
paths:
  /version:
    get:
      summary: 'Get Version'
      responses:
        '200':
          description: 'Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /health:
    get:
      summary: 'Get Health'
      responses:
        '200':
          description: 'Health'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /configuration:
    get:
      summary: 'Get Configuration'
      responses:
        '200':
          description: 'System Configuration'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfigurationResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /peers:
    get:
      summary: 'Get Peers'
      responses:
        '200':
          description: 'Peers'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemPeersResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /addressbook:
    get:
      summary: 'Get Address Book'
      responses:
        '200':
          description: 'Address Book'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAddressBookResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /prometheus/metrics:
    get:
      summary: 'Get Prometheus Metrics'
      responses:
        '200':
          description: 'Prometheus Metrics'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  "/network-sync-status":
    get:
      summary: Get Network Sync Status
      description: Returns the current sync status of the node.
      responses:
        '200':
          description: Network Status
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NetworkSyncStatusResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    VersionResponse:
      type: object
      required:
        - version
      properties:
        version:
          type: string
    HealthResponse:
      type: object
      required:
        - status
        - current_fork_name
        - executed_forks
        - fork_vote_status
        - unknown_reported_forks
      properties:
        status:
          type: string
          enum:
            - BOOTING
            - SYNCING
            - UP
            - STALLED
            - OUT_OF_SYNC
        current_fork_name:
          type: string
        executed_forks:
          type: array
          items:
            $ref: "#/components/schemas/ExecutedFork"
        fork_vote_status:
          type: string
          enum:
            - VOTE_REQUIRED
            - NO_ACTION_NEEDED
        unknown_reported_forks:
          type: array
          items:
            type: object
            required:
              - name
              - reported_by
            properties:
              name:
                type: string
              reported_by:
                type: array
                items:
                  type: string
    SystemConfigurationResponse:
      type: object
      required:
        - networking
        - bft
      properties:
        mempool:
          $ref: "#/components/schemas/MempoolConfiguration"
        bft:
          $ref: "#/components/schemas/BFTConfiguration"
        sync:
          $ref: "#/components/schemas/SyncConfiguration"
        networking:
          $ref: "#/components/schemas/NetworkingConfiguration"
    SystemAddressBookResponse:
      type: object
      required:
        - entries
      properties:
        entries:
          type: array
          items:
            $ref: "#/components/schemas/AddressBookEntry"
    SystemPeersResponse:
      type: object
      required:
        - peers
      properties:
        peers:
          type: array
          items:
            $ref: "#/components/schemas/Peer"
    AddressBookEntry:
      type: object
      required:
        - peer_id
        - banned
        - known_addresses
      properties:
        peer_id:
          type: string
        banned:
          type: boolean
        banned_until:
          type: integer
          format: int64
        known_addresses:
          type: array
          items:
            $ref: "#/components/schemas/Address"
    Address:
      type: object
      required:
        - uri
        - blacklisted
        - last_connection_status
      properties:
        uri:
          type: string
        blacklisted:
          type: boolean
        last_connection_status:
          type: string
          enum:
            - SUCCESS
            - FAILURE
            - UNKNOWN
    Peer:
      type: object
      required:
        - peer_id
        - channels
      properties:
        peer_id:
          type: string
        channels:
          type: array
          items:
            $ref: "#/components/schemas/PeerChannel"
    PeerChannel:
      type: object
      required:
        - type
        - local_port
        - ip
      properties:
        type:
          type: string
          enum:
            - IN
            - OUT
        local_port:
          type: integer
        ip:
          type: string
        uri:
          type: string
    MempoolConfiguration:
      type: object
      required:
        - max_size
        - throttle
      properties:
        max_size:
          type: integer
        throttle:
          type: integer
          format: int64
    BFTConfiguration:
      type: object
      required:
        - pacemaker_timeout
        - bft_sync_patience
      properties:
        pacemaker_timeout:
          type: integer
          format: int64
        bft_sync_patience:
          type: integer
    SyncConfiguration:
      type: object
      required:
        - sync_check_interval
        - sync_check_max_peers
        - request_timeout
        - ledger_status_update_max_peers_to_notify
        - max_ledger_updates_rate
      properties:
        sync_check_interval:
          type: integer
          format: int64
        sync_check_max_peers:
          type: integer
        request_timeout:
          type: integer
          format: int64
        ledger_status_update_max_peers_to_notify:
          type: integer
        max_ledger_updates_rate:
          type: number
    NetworkingConfiguration:
      type: object
      required:
        - default_port
        - discovery_interval
        - listen_address
        - listen_port
        - broadcast_port
        - peer_connection_timeout
        - max_inbound_channels
        - max_outbound_channels
        - channel_buffer_size
        - peer_liveness_check_interval
        - ping_timeout
        - seed_nodes
        - node_address
      properties:
        default_port:
          type: integer
        discovery_interval:
          type: integer
          format: int64
        listen_address:
          type: string
        listen_port:
          type: integer
        broadcast_port:
          type: integer
        peer_connection_timeout:
          type: integer
        max_inbound_channels:
          type: integer
        max_outbound_channels:
          type: integer
        channel_buffer_size:
          type: integer
        peer_liveness_check_interval:
          type: integer
          format: int64
        ping_timeout:
          type: integer
          format: int64
        seed_nodes:
          type: array
          items:
            type: string
        node_address:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    ExecutedFork:
      type: object
      required:
        - epoch
        - name
      properties:
        epoch:
          type: integer
          format: int64
        name:
          type: string
#################################
# REQUEST: /network-sync-status #
#################################
    NetworkSyncStatusResponse:
      type: object
      required:
        - sync_status
      properties:
        sync_status:
          $ref: "#/components/schemas/SyncStatus"
          description: Information on how synced the node is to the rest of the network.
    SyncStatus:
      type: object
      required:
        - current_state_version
        - target_state_version
      properties:
        current_state_version:
          type: integer
          format: int64
        target_state_version:
          type: integer
          format: int64