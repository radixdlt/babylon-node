/*
 * Babylon Core API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.core.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radixdlt.api.core.generated.models.EntityReference;
import com.radixdlt.api.core.generated.models.SubstateId;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * V0StateComponentDescendentId
 */
@JsonPropertyOrder({
  V0StateComponentDescendentId.JSON_PROPERTY_PARENT,
  V0StateComponentDescendentId.JSON_PROPERTY_ENTITY,
  V0StateComponentDescendentId.JSON_PROPERTY_DEPTH
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class V0StateComponentDescendentId {
  public static final String JSON_PROPERTY_PARENT = "parent";
  private SubstateId parent;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private EntityReference entity;

  public static final String JSON_PROPERTY_DEPTH = "depth";
  private Integer depth;

  public V0StateComponentDescendentId() { 
  }

  public V0StateComponentDescendentId parent(SubstateId parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SubstateId getParent() {
    return parent;
  }


  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParent(SubstateId parent) {
    this.parent = parent;
  }


  public V0StateComponentDescendentId entity(EntityReference entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EntityReference getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntity(EntityReference entity) {
    this.entity = entity;
  }


  public V0StateComponentDescendentId depth(Integer depth) {
    this.depth = depth;
    return this;
  }

   /**
   * Depth under component
   * minimum: 0
   * maximum: 100
   * @return depth
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Depth under component")
  @JsonProperty(JSON_PROPERTY_DEPTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDepth() {
    return depth;
  }


  @JsonProperty(JSON_PROPERTY_DEPTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDepth(Integer depth) {
    this.depth = depth;
  }


  /**
   * Return true if this V0StateComponentDescendentId object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V0StateComponentDescendentId v0StateComponentDescendentId = (V0StateComponentDescendentId) o;
    return Objects.equals(this.parent, v0StateComponentDescendentId.parent) &&
        Objects.equals(this.entity, v0StateComponentDescendentId.entity) &&
        Objects.equals(this.depth, v0StateComponentDescendentId.depth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(parent, entity, depth);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V0StateComponentDescendentId {\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    depth: ").append(toIndentedString(depth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

