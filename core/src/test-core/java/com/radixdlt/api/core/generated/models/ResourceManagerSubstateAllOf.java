/*
 * Babylon Core API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.core.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radixdlt.api.core.generated.models.EntityReference;
import com.radixdlt.api.core.generated.models.ResourceManagerSubstateAllOfAuthRules;
import com.radixdlt.api.core.generated.models.ResourceManagerSubstateAllOfMetadata;
import com.radixdlt.api.core.generated.models.ResourceType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ResourceManagerSubstateAllOf
 */
@JsonPropertyOrder({
  ResourceManagerSubstateAllOf.JSON_PROPERTY_RESOURCE_TYPE,
  ResourceManagerSubstateAllOf.JSON_PROPERTY_FUNGIBLE_DIVISIBILITY,
  ResourceManagerSubstateAllOf.JSON_PROPERTY_METADATA,
  ResourceManagerSubstateAllOf.JSON_PROPERTY_TOTAL_SUPPLY,
  ResourceManagerSubstateAllOf.JSON_PROPERTY_OWNED_NON_FUNGIBLE_STORE,
  ResourceManagerSubstateAllOf.JSON_PROPERTY_AUTH_RULES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ResourceManagerSubstateAllOf {
  public static final String JSON_PROPERTY_RESOURCE_TYPE = "resource_type";
  private ResourceType resourceType;

  public static final String JSON_PROPERTY_FUNGIBLE_DIVISIBILITY = "fungible_divisibility";
  private Integer fungibleDivisibility;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private List<ResourceManagerSubstateAllOfMetadata> metadata = new ArrayList<>();

  public static final String JSON_PROPERTY_TOTAL_SUPPLY = "total_supply";
  private String totalSupply;

  public static final String JSON_PROPERTY_OWNED_NON_FUNGIBLE_STORE = "owned_non_fungible_store";
  private EntityReference ownedNonFungibleStore;

  public static final String JSON_PROPERTY_AUTH_RULES = "auth_rules";
  private ResourceManagerSubstateAllOfAuthRules authRules;

  public ResourceManagerSubstateAllOf() { 
  }

  public ResourceManagerSubstateAllOf resourceType(ResourceType resourceType) {
    this.resourceType = resourceType;
    return this;
  }

   /**
   * Get resourceType
   * @return resourceType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ResourceType getResourceType() {
    return resourceType;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResourceType(ResourceType resourceType) {
    this.resourceType = resourceType;
  }


  public ResourceManagerSubstateAllOf fungibleDivisibility(Integer fungibleDivisibility) {
    this.fungibleDivisibility = fungibleDivisibility;
    return this;
  }

   /**
   * Get fungibleDivisibility
   * minimum: 0
   * maximum: 18
   * @return fungibleDivisibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FUNGIBLE_DIVISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFungibleDivisibility() {
    return fungibleDivisibility;
  }


  @JsonProperty(JSON_PROPERTY_FUNGIBLE_DIVISIBILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFungibleDivisibility(Integer fungibleDivisibility) {
    this.fungibleDivisibility = fungibleDivisibility;
  }


  public ResourceManagerSubstateAllOf metadata(List<ResourceManagerSubstateAllOfMetadata> metadata) {
    this.metadata = metadata;
    return this;
  }

  public ResourceManagerSubstateAllOf addMetadataItem(ResourceManagerSubstateAllOfMetadata metadataItem) {
    this.metadata.add(metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ResourceManagerSubstateAllOfMetadata> getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetadata(List<ResourceManagerSubstateAllOfMetadata> metadata) {
    this.metadata = metadata;
  }


  public ResourceManagerSubstateAllOf totalSupply(String totalSupply) {
    this.totalSupply = totalSupply;
    return this;
  }

   /**
   * The string-encoded decimal representing the total supply of this resource. A decimal is formed of some signed integer &#x60;m&#x60; of attos (&#x60;10^(-18)&#x60;) units, where &#x60;-2^(256 - 1) &lt;&#x3D; m &lt; 2^(256 - 1)&#x60;. 
   * @return totalSupply
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The string-encoded decimal representing the total supply of this resource. A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(256 - 1) <= m < 2^(256 - 1)`. ")
  @JsonProperty(JSON_PROPERTY_TOTAL_SUPPLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTotalSupply() {
    return totalSupply;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_SUPPLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalSupply(String totalSupply) {
    this.totalSupply = totalSupply;
  }


  public ResourceManagerSubstateAllOf ownedNonFungibleStore(EntityReference ownedNonFungibleStore) {
    this.ownedNonFungibleStore = ownedNonFungibleStore;
    return this;
  }

   /**
   * Get ownedNonFungibleStore
   * @return ownedNonFungibleStore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OWNED_NON_FUNGIBLE_STORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityReference getOwnedNonFungibleStore() {
    return ownedNonFungibleStore;
  }


  @JsonProperty(JSON_PROPERTY_OWNED_NON_FUNGIBLE_STORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnedNonFungibleStore(EntityReference ownedNonFungibleStore) {
    this.ownedNonFungibleStore = ownedNonFungibleStore;
  }


  public ResourceManagerSubstateAllOf authRules(ResourceManagerSubstateAllOfAuthRules authRules) {
    this.authRules = authRules;
    return this;
  }

   /**
   * Get authRules
   * @return authRules
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_AUTH_RULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ResourceManagerSubstateAllOfAuthRules getAuthRules() {
    return authRules;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_RULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthRules(ResourceManagerSubstateAllOfAuthRules authRules) {
    this.authRules = authRules;
  }


  /**
   * Return true if this ResourceManagerSubstate_allOf object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceManagerSubstateAllOf resourceManagerSubstateAllOf = (ResourceManagerSubstateAllOf) o;
    return Objects.equals(this.resourceType, resourceManagerSubstateAllOf.resourceType) &&
        Objects.equals(this.fungibleDivisibility, resourceManagerSubstateAllOf.fungibleDivisibility) &&
        Objects.equals(this.metadata, resourceManagerSubstateAllOf.metadata) &&
        Objects.equals(this.totalSupply, resourceManagerSubstateAllOf.totalSupply) &&
        Objects.equals(this.ownedNonFungibleStore, resourceManagerSubstateAllOf.ownedNonFungibleStore) &&
        Objects.equals(this.authRules, resourceManagerSubstateAllOf.authRules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceType, fungibleDivisibility, metadata, totalSupply, ownedNonFungibleStore, authRules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceManagerSubstateAllOf {\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    fungibleDivisibility: ").append(toIndentedString(fungibleDivisibility)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    totalSupply: ").append(toIndentedString(totalSupply)).append("\n");
    sb.append("    ownedNonFungibleStore: ").append(toIndentedString(ownedNonFungibleStore)).append("\n");
    sb.append("    authRules: ").append(toIndentedString(authRules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

