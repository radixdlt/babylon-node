/*
 * Babylon Core API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.core.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Different versions regarding the node, network and api.
 */
@ApiModel(description = "Different versions regarding the node, network and api.")
@JsonPropertyOrder({
  NetworkConfigurationResponseVersion.JSON_PROPERTY_CORE_VERSION,
  NetworkConfigurationResponseVersion.JSON_PROPERTY_API_VERSION
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class NetworkConfigurationResponseVersion {
  public static final String JSON_PROPERTY_CORE_VERSION = "core_version";
  private String coreVersion;

  public static final String JSON_PROPERTY_API_VERSION = "api_version";
  private String apiVersion;

  public NetworkConfigurationResponseVersion() { 
  }

  public NetworkConfigurationResponseVersion coreVersion(String coreVersion) {
    this.coreVersion = coreVersion;
    return this;
  }

   /**
   * Get coreVersion
   * @return coreVersion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CORE_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCoreVersion() {
    return coreVersion;
  }


  @JsonProperty(JSON_PROPERTY_CORE_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCoreVersion(String coreVersion) {
    this.coreVersion = coreVersion;
  }


  public NetworkConfigurationResponseVersion apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

   /**
   * Get apiVersion
   * @return apiVersion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_API_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getApiVersion() {
    return apiVersion;
  }


  @JsonProperty(JSON_PROPERTY_API_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }


  /**
   * Return true if this NetworkConfigurationResponse_version object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkConfigurationResponseVersion networkConfigurationResponseVersion = (NetworkConfigurationResponseVersion) o;
    return Objects.equals(this.coreVersion, networkConfigurationResponseVersion.coreVersion) &&
        Objects.equals(this.apiVersion, networkConfigurationResponseVersion.apiVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coreVersion, apiVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkConfigurationResponseVersion {\n");
    sb.append("    coreVersion: ").append(toIndentedString(coreVersion)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

