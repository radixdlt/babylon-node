/*
 * Babylon Core API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.core.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radixdlt.api.core.generated.models.DynamicAuthorization;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ComponentAccessRulesLayer
 */
@JsonPropertyOrder({
  ComponentAccessRulesLayer.JSON_PROPERTY_METHOD_AUTH,
  ComponentAccessRulesLayer.JSON_PROPERTY_DEFAULT_AUTH
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ComponentAccessRulesLayer {
  public static final String JSON_PROPERTY_METHOD_AUTH = "method_auth";
  private Map<String, DynamicAuthorization> methodAuth = new HashMap<>();

  public static final String JSON_PROPERTY_DEFAULT_AUTH = "default_auth";
  private DynamicAuthorization defaultAuth;

  public ComponentAccessRulesLayer() { 
  }

  public ComponentAccessRulesLayer methodAuth(Map<String, DynamicAuthorization> methodAuth) {
    this.methodAuth = methodAuth;
    return this;
  }

  public ComponentAccessRulesLayer putMethodAuthItem(String key, DynamicAuthorization methodAuthItem) {
    this.methodAuth.put(key, methodAuthItem);
    return this;
  }

   /**
   * A map from the method name to method access rules
   * @return methodAuth
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A map from the method name to method access rules")
  @JsonProperty(JSON_PROPERTY_METHOD_AUTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, DynamicAuthorization> getMethodAuth() {
    return methodAuth;
  }


  @JsonProperty(JSON_PROPERTY_METHOD_AUTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMethodAuth(Map<String, DynamicAuthorization> methodAuth) {
    this.methodAuth = methodAuth;
  }


  public ComponentAccessRulesLayer defaultAuth(DynamicAuthorization defaultAuth) {
    this.defaultAuth = defaultAuth;
    return this;
  }

   /**
   * Get defaultAuth
   * @return defaultAuth
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DEFAULT_AUTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DynamicAuthorization getDefaultAuth() {
    return defaultAuth;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_AUTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDefaultAuth(DynamicAuthorization defaultAuth) {
    this.defaultAuth = defaultAuth;
  }


  /**
   * Return true if this ComponentAccessRulesLayer object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComponentAccessRulesLayer componentAccessRulesLayer = (ComponentAccessRulesLayer) o;
    return Objects.equals(this.methodAuth, componentAccessRulesLayer.methodAuth) &&
        Objects.equals(this.defaultAuth, componentAccessRulesLayer.defaultAuth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(methodAuth, defaultAuth);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComponentAccessRulesLayer {\n");
    sb.append("    methodAuth: ").append(toIndentedString(methodAuth)).append("\n");
    sb.append("    defaultAuth: ").append(toIndentedString(defaultAuth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

