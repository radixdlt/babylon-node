/*
 * Babylon Core API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.core.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radixdlt.api.core.generated.models.IndexSchemaSubpathAllOf;
import com.radixdlt.api.core.generated.models.SchemaSubpathBase;
import com.radixdlt.api.core.generated.models.SchemaSubpathType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * IndexSchemaSubpath
 */
@JsonPropertyOrder({
  IndexSchemaSubpath.JSON_PROPERTY_TYPE,
  IndexSchemaSubpath.JSON_PROPERTY_INDEX
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class IndexSchemaSubpath {
  public static final String JSON_PROPERTY_TYPE = "type";
  private SchemaSubpathType type;

  public static final String JSON_PROPERTY_INDEX = "index";
  private String index;

  public IndexSchemaSubpath() { 
  }

  public IndexSchemaSubpath type(SchemaSubpathType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SchemaSubpathType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(SchemaSubpathType type) {
    this.type = type;
  }


  public IndexSchemaSubpath index(String index) {
    this.index = index;
    return this;
  }

   /**
   * A decimal-string-encoded integer between 0 and 2^64 - 1, which captures the index of the schema sub-path
   * @return index
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A decimal-string-encoded integer between 0 and 2^64 - 1, which captures the index of the schema sub-path")
  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIndex() {
    return index;
  }


  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIndex(String index) {
    this.index = index;
  }


  /**
   * Return true if this IndexSchemaSubpath object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndexSchemaSubpath indexSchemaSubpath = (IndexSchemaSubpath) o;
    return Objects.equals(this.type, indexSchemaSubpath.type) &&
        Objects.equals(this.index, indexSchemaSubpath.index);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, index);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndexSchemaSubpath {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

