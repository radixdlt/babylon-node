/*
 * Babylon Core API
 * This API is exposed by the Babylon Radix node to give clients access to the Radix Engine, Mempool and State in the node. It is intended for use by node-runners on a private network, and is not intended to be exposed publicly. Heavy load may impact the node's function.  If you require queries against historical ledger state, you may also wish to consider using the [Gateway API](https://betanet-gateway.redoc.ly/). 
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.core.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radixdlt.api.core.generated.models.Substate;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * StateResourceResponse
 */
@JsonPropertyOrder({
  StateResourceResponse.JSON_PROPERTY_MANAGER,
  StateResourceResponse.JSON_PROPERTY_METADATA,
  StateResourceResponse.JSON_PROPERTY_ACCESS_RULES,
  StateResourceResponse.JSON_PROPERTY_VAULT_ACCESS_RULES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class StateResourceResponse {
  public static final String JSON_PROPERTY_MANAGER = "manager";
  private Substate manager;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private Substate metadata;

  public static final String JSON_PROPERTY_ACCESS_RULES = "access_rules";
  private Substate accessRules;

  public static final String JSON_PROPERTY_VAULT_ACCESS_RULES = "vault_access_rules";
  private Substate vaultAccessRules;

  public StateResourceResponse() { 
  }

  public StateResourceResponse manager(Substate manager) {
    this.manager = manager;
    return this;
  }

   /**
   * Get manager
   * @return manager
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MANAGER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Substate getManager() {
    return manager;
  }


  @JsonProperty(JSON_PROPERTY_MANAGER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setManager(Substate manager) {
    this.manager = manager;
  }


  public StateResourceResponse metadata(Substate metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Substate getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetadata(Substate metadata) {
    this.metadata = metadata;
  }


  public StateResourceResponse accessRules(Substate accessRules) {
    this.accessRules = accessRules;
    return this;
  }

   /**
   * Get accessRules
   * @return accessRules
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ACCESS_RULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Substate getAccessRules() {
    return accessRules;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_RULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccessRules(Substate accessRules) {
    this.accessRules = accessRules;
  }


  public StateResourceResponse vaultAccessRules(Substate vaultAccessRules) {
    this.vaultAccessRules = vaultAccessRules;
    return this;
  }

   /**
   * Get vaultAccessRules
   * @return vaultAccessRules
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VAULT_ACCESS_RULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Substate getVaultAccessRules() {
    return vaultAccessRules;
  }


  @JsonProperty(JSON_PROPERTY_VAULT_ACCESS_RULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVaultAccessRules(Substate vaultAccessRules) {
    this.vaultAccessRules = vaultAccessRules;
  }


  /**
   * Return true if this StateResourceResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StateResourceResponse stateResourceResponse = (StateResourceResponse) o;
    return Objects.equals(this.manager, stateResourceResponse.manager) &&
        Objects.equals(this.metadata, stateResourceResponse.metadata) &&
        Objects.equals(this.accessRules, stateResourceResponse.accessRules) &&
        Objects.equals(this.vaultAccessRules, stateResourceResponse.vaultAccessRules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(manager, metadata, accessRules, vaultAccessRules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StateResourceResponse {\n");
    sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    accessRules: ").append(toIndentedString(accessRules)).append("\n");
    sb.append("    vaultAccessRules: ").append(toIndentedString(vaultAccessRules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

