/*
 * Babylon Core API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.core.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radixdlt.api.core.generated.models.EntityReference;
import com.radixdlt.api.core.generated.models.GlobalEntityReference;
import com.radixdlt.api.core.generated.models.SborData;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DataStruct
 */
@JsonPropertyOrder({
  DataStruct.JSON_PROPERTY_STRUCT_DATA,
  DataStruct.JSON_PROPERTY_OWNED_ENTITIES,
  DataStruct.JSON_PROPERTY_REFERENCED_ENTITIES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DataStruct {
  public static final String JSON_PROPERTY_STRUCT_DATA = "struct_data";
  private SborData structData;

  public static final String JSON_PROPERTY_OWNED_ENTITIES = "owned_entities";
  private List<EntityReference> ownedEntities = new ArrayList<>();

  public static final String JSON_PROPERTY_REFERENCED_ENTITIES = "referenced_entities";
  private List<GlobalEntityReference> referencedEntities = new ArrayList<>();

  public DataStruct() { 
  }

  public DataStruct structData(SborData structData) {
    this.structData = structData;
    return this;
  }

   /**
   * Get structData
   * @return structData
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STRUCT_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SborData getStructData() {
    return structData;
  }


  @JsonProperty(JSON_PROPERTY_STRUCT_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStructData(SborData structData) {
    this.structData = structData;
  }


  public DataStruct ownedEntities(List<EntityReference> ownedEntities) {
    this.ownedEntities = ownedEntities;
    return this;
  }

  public DataStruct addOwnedEntitiesItem(EntityReference ownedEntitiesItem) {
    this.ownedEntities.add(ownedEntitiesItem);
    return this;
  }

   /**
   * Get ownedEntities
   * @return ownedEntities
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_OWNED_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<EntityReference> getOwnedEntities() {
    return ownedEntities;
  }


  @JsonProperty(JSON_PROPERTY_OWNED_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOwnedEntities(List<EntityReference> ownedEntities) {
    this.ownedEntities = ownedEntities;
  }


  public DataStruct referencedEntities(List<GlobalEntityReference> referencedEntities) {
    this.referencedEntities = referencedEntities;
    return this;
  }

  public DataStruct addReferencedEntitiesItem(GlobalEntityReference referencedEntitiesItem) {
    this.referencedEntities.add(referencedEntitiesItem);
    return this;
  }

   /**
   * Get referencedEntities
   * @return referencedEntities
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REFERENCED_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<GlobalEntityReference> getReferencedEntities() {
    return referencedEntities;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCED_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReferencedEntities(List<GlobalEntityReference> referencedEntities) {
    this.referencedEntities = referencedEntities;
  }


  /**
   * Return true if this DataStruct object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataStruct dataStruct = (DataStruct) o;
    return Objects.equals(this.structData, dataStruct.structData) &&
        Objects.equals(this.ownedEntities, dataStruct.ownedEntities) &&
        Objects.equals(this.referencedEntities, dataStruct.referencedEntities);
  }

  @Override
  public int hashCode() {
    return Objects.hash(structData, ownedEntities, referencedEntities);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataStruct {\n");
    sb.append("    structData: ").append(toIndentedString(structData)).append("\n");
    sb.append("    ownedEntities: ").append(toIndentedString(ownedEntities)).append("\n");
    sb.append("    referencedEntities: ").append(toIndentedString(referencedEntities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

