/*
 * Babylon Core API
 * This API is exposed by the Babylon Radix node to give clients access to the Radix Engine, Mempool and State in the node. It is intended for use by node-runners on a private network, and is not intended to be exposed publicly. Heavy load may impact the node's function.  If you require queries against historical ledger state, you may also wish to consider using the [Gateway API](https://betanet-gateway.redoc.ly/). 
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.core.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radixdlt.api.core.generated.models.ResourceChange;
import com.radixdlt.api.core.generated.models.TransactionPreviewResponseLogsInner;
import com.radixdlt.api.core.generated.models.TransactionReceipt;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * TransactionPreviewResponse
 */
@JsonPropertyOrder({
  TransactionPreviewResponse.JSON_PROPERTY_RECEIPT,
  TransactionPreviewResponse.JSON_PROPERTY_RESOURCE_CHANGES,
  TransactionPreviewResponse.JSON_PROPERTY_LOGS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TransactionPreviewResponse {
  public static final String JSON_PROPERTY_RECEIPT = "receipt";
  private TransactionReceipt receipt;

  public static final String JSON_PROPERTY_RESOURCE_CHANGES = "resource_changes";
  private List<ResourceChange> resourceChanges = new ArrayList<>();

  public static final String JSON_PROPERTY_LOGS = "logs";
  private List<TransactionPreviewResponseLogsInner> logs = new ArrayList<>();

  public TransactionPreviewResponse() { 
  }

  public TransactionPreviewResponse receipt(TransactionReceipt receipt) {
    this.receipt = receipt;
    return this;
  }

   /**
   * Get receipt
   * @return receipt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RECEIPT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TransactionReceipt getReceipt() {
    return receipt;
  }


  @JsonProperty(JSON_PROPERTY_RECEIPT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReceipt(TransactionReceipt receipt) {
    this.receipt = receipt;
  }


  public TransactionPreviewResponse resourceChanges(List<ResourceChange> resourceChanges) {
    this.resourceChanges = resourceChanges;
    return this;
  }

  public TransactionPreviewResponse addResourceChangesItem(ResourceChange resourceChangesItem) {
    this.resourceChanges.add(resourceChangesItem);
    return this;
  }

   /**
   * Get resourceChanges
   * @return resourceChanges
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RESOURCE_CHANGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ResourceChange> getResourceChanges() {
    return resourceChanges;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_CHANGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResourceChanges(List<ResourceChange> resourceChanges) {
    this.resourceChanges = resourceChanges;
  }


  public TransactionPreviewResponse logs(List<TransactionPreviewResponseLogsInner> logs) {
    this.logs = logs;
    return this;
  }

  public TransactionPreviewResponse addLogsItem(TransactionPreviewResponseLogsInner logsItem) {
    this.logs.add(logsItem);
    return this;
  }

   /**
   * Get logs
   * @return logs
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<TransactionPreviewResponseLogsInner> getLogs() {
    return logs;
  }


  @JsonProperty(JSON_PROPERTY_LOGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLogs(List<TransactionPreviewResponseLogsInner> logs) {
    this.logs = logs;
  }


  /**
   * Return true if this TransactionPreviewResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionPreviewResponse transactionPreviewResponse = (TransactionPreviewResponse) o;
    return Objects.equals(this.receipt, transactionPreviewResponse.receipt) &&
        Objects.equals(this.resourceChanges, transactionPreviewResponse.resourceChanges) &&
        Objects.equals(this.logs, transactionPreviewResponse.logs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(receipt, resourceChanges, logs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionPreviewResponse {\n");
    sb.append("    receipt: ").append(toIndentedString(receipt)).append("\n");
    sb.append("    resourceChanges: ").append(toIndentedString(resourceChanges)).append("\n");
    sb.append("    logs: ").append(toIndentedString(logs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

