/*
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere. 
 *
 * The version of the OpenAPI document: 1.4.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.mesh.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radixdlt.api.mesh.generated.models.BlockTransaction;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SearchTransactionsResponse contains an ordered collection of BlockTransactions that match the query in SearchTransactionsRequest. These BlockTransactions are sorted from most recent block to oldest block. 
 */
@ApiModel(description = "SearchTransactionsResponse contains an ordered collection of BlockTransactions that match the query in SearchTransactionsRequest. These BlockTransactions are sorted from most recent block to oldest block. ")
@JsonPropertyOrder({
  SearchTransactionsResponse.JSON_PROPERTY_TRANSACTIONS,
  SearchTransactionsResponse.JSON_PROPERTY_TOTAL_COUNT,
  SearchTransactionsResponse.JSON_PROPERTY_NEXT_OFFSET
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SearchTransactionsResponse {
  public static final String JSON_PROPERTY_TRANSACTIONS = "transactions";
  private List<BlockTransaction> transactions = new ArrayList<>();

  public static final String JSON_PROPERTY_TOTAL_COUNT = "total_count";
  private Long totalCount;

  public static final String JSON_PROPERTY_NEXT_OFFSET = "next_offset";
  private Long nextOffset;

  public SearchTransactionsResponse() { 
  }

  public SearchTransactionsResponse transactions(List<BlockTransaction> transactions) {
    this.transactions = transactions;
    return this;
  }

  public SearchTransactionsResponse addTransactionsItem(BlockTransaction transactionsItem) {
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * transactions is an array of BlockTransactions sorted by most recent BlockIdentifier (meaning that transactions in recent blocks appear first).  If there are many transactions for a particular search, transactions may not contain all matching transactions. It is up to the caller to paginate these transactions using the max_block field. 
   * @return transactions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "transactions is an array of BlockTransactions sorted by most recent BlockIdentifier (meaning that transactions in recent blocks appear first).  If there are many transactions for a particular search, transactions may not contain all matching transactions. It is up to the caller to paginate these transactions using the max_block field. ")
  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<BlockTransaction> getTransactions() {
    return transactions;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactions(List<BlockTransaction> transactions) {
    this.transactions = transactions;
  }


  public SearchTransactionsResponse totalCount(Long totalCount) {
    this.totalCount = totalCount;
    return this;
  }

   /**
   * total_count is the number of results for a given search. Callers typically use this value to concurrently fetch results by offset or to display a virtual page number associated with results. 
   * minimum: 0
   * @return totalCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "5", required = true, value = "total_count is the number of results for a given search. Callers typically use this value to concurrently fetch results by offset or to display a virtual page number associated with results. ")
  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTotalCount() {
    return totalCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalCount(Long totalCount) {
    this.totalCount = totalCount;
  }


  public SearchTransactionsResponse nextOffset(Long nextOffset) {
    this.nextOffset = nextOffset;
    return this;
  }

   /**
   * next_offset is the next offset to use when paginating through transaction results. If this field is not populated, there are no more transactions to query. 
   * minimum: 0
   * @return nextOffset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "next_offset is the next offset to use when paginating through transaction results. If this field is not populated, there are no more transactions to query. ")
  @JsonProperty(JSON_PROPERTY_NEXT_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNextOffset() {
    return nextOffset;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextOffset(Long nextOffset) {
    this.nextOffset = nextOffset;
  }


  /**
   * Return true if this SearchTransactionsResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchTransactionsResponse searchTransactionsResponse = (SearchTransactionsResponse) o;
    return Objects.equals(this.transactions, searchTransactionsResponse.transactions) &&
        Objects.equals(this.totalCount, searchTransactionsResponse.totalCount) &&
        Objects.equals(this.nextOffset, searchTransactionsResponse.nextOffset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactions, totalCount, nextOffset);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchTransactionsResponse {\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    nextOffset: ").append(toIndentedString(nextOffset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

