/*
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere. 
 *
 * The version of the OpenAPI document: 1.4.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.mesh.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radixdlt.api.mesh.generated.models.BlockIdentifier;
import com.radixdlt.api.mesh.generated.models.Peer;
import com.radixdlt.api.mesh.generated.models.SyncStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * NetworkStatusResponse contains basic information about the node&#39;s view of a blockchain network. It is assumed that any BlockIdentifier.Index less than or equal to CurrentBlockIdentifier.Index can be queried.  If a Rosetta implementation prunes historical state, it should populate the optional &#x60;oldest_block_identifier&#x60; field with the oldest block available to query. If this is not populated, it is assumed that the &#x60;genesis_block_identifier&#x60; is the oldest queryable block.  If a Rosetta implementation performs some pre-sync before it is possible to query blocks, sync_status should be populated so that clients can still monitor healthiness. Without this field, it may appear that the implementation is stuck syncing and needs to be terminated. 
 */
@ApiModel(description = "NetworkStatusResponse contains basic information about the node's view of a blockchain network. It is assumed that any BlockIdentifier.Index less than or equal to CurrentBlockIdentifier.Index can be queried.  If a Rosetta implementation prunes historical state, it should populate the optional `oldest_block_identifier` field with the oldest block available to query. If this is not populated, it is assumed that the `genesis_block_identifier` is the oldest queryable block.  If a Rosetta implementation performs some pre-sync before it is possible to query blocks, sync_status should be populated so that clients can still monitor healthiness. Without this field, it may appear that the implementation is stuck syncing and needs to be terminated. ")
@JsonPropertyOrder({
  NetworkStatusResponse.JSON_PROPERTY_CURRENT_BLOCK_IDENTIFIER,
  NetworkStatusResponse.JSON_PROPERTY_CURRENT_BLOCK_TIMESTAMP,
  NetworkStatusResponse.JSON_PROPERTY_GENESIS_BLOCK_IDENTIFIER,
  NetworkStatusResponse.JSON_PROPERTY_OLDEST_BLOCK_IDENTIFIER,
  NetworkStatusResponse.JSON_PROPERTY_SYNC_STATUS,
  NetworkStatusResponse.JSON_PROPERTY_PEERS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class NetworkStatusResponse {
  public static final String JSON_PROPERTY_CURRENT_BLOCK_IDENTIFIER = "current_block_identifier";
  private BlockIdentifier currentBlockIdentifier;

  public static final String JSON_PROPERTY_CURRENT_BLOCK_TIMESTAMP = "current_block_timestamp";
  private Long currentBlockTimestamp;

  public static final String JSON_PROPERTY_GENESIS_BLOCK_IDENTIFIER = "genesis_block_identifier";
  private BlockIdentifier genesisBlockIdentifier;

  public static final String JSON_PROPERTY_OLDEST_BLOCK_IDENTIFIER = "oldest_block_identifier";
  private BlockIdentifier oldestBlockIdentifier;

  public static final String JSON_PROPERTY_SYNC_STATUS = "sync_status";
  private SyncStatus syncStatus;

  public static final String JSON_PROPERTY_PEERS = "peers";
  private List<Peer> peers = null;

  public NetworkStatusResponse() { 
  }

  public NetworkStatusResponse currentBlockIdentifier(BlockIdentifier currentBlockIdentifier) {
    this.currentBlockIdentifier = currentBlockIdentifier;
    return this;
  }

   /**
   * Get currentBlockIdentifier
   * @return currentBlockIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CURRENT_BLOCK_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BlockIdentifier getCurrentBlockIdentifier() {
    return currentBlockIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_BLOCK_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrentBlockIdentifier(BlockIdentifier currentBlockIdentifier) {
    this.currentBlockIdentifier = currentBlockIdentifier;
  }


  public NetworkStatusResponse currentBlockTimestamp(Long currentBlockTimestamp) {
    this.currentBlockTimestamp = currentBlockTimestamp;
    return this;
  }

   /**
   * The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second. 
   * minimum: 0
   * @return currentBlockTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1582833600000", required = true, value = "The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second. ")
  @JsonProperty(JSON_PROPERTY_CURRENT_BLOCK_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getCurrentBlockTimestamp() {
    return currentBlockTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_BLOCK_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrentBlockTimestamp(Long currentBlockTimestamp) {
    this.currentBlockTimestamp = currentBlockTimestamp;
  }


  public NetworkStatusResponse genesisBlockIdentifier(BlockIdentifier genesisBlockIdentifier) {
    this.genesisBlockIdentifier = genesisBlockIdentifier;
    return this;
  }

   /**
   * Get genesisBlockIdentifier
   * @return genesisBlockIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_GENESIS_BLOCK_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BlockIdentifier getGenesisBlockIdentifier() {
    return genesisBlockIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_GENESIS_BLOCK_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGenesisBlockIdentifier(BlockIdentifier genesisBlockIdentifier) {
    this.genesisBlockIdentifier = genesisBlockIdentifier;
  }


  public NetworkStatusResponse oldestBlockIdentifier(BlockIdentifier oldestBlockIdentifier) {
    this.oldestBlockIdentifier = oldestBlockIdentifier;
    return this;
  }

   /**
   * Get oldestBlockIdentifier
   * @return oldestBlockIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OLDEST_BLOCK_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BlockIdentifier getOldestBlockIdentifier() {
    return oldestBlockIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_OLDEST_BLOCK_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOldestBlockIdentifier(BlockIdentifier oldestBlockIdentifier) {
    this.oldestBlockIdentifier = oldestBlockIdentifier;
  }


  public NetworkStatusResponse syncStatus(SyncStatus syncStatus) {
    this.syncStatus = syncStatus;
    return this;
  }

   /**
   * Get syncStatus
   * @return syncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SyncStatus getSyncStatus() {
    return syncStatus;
  }


  @JsonProperty(JSON_PROPERTY_SYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSyncStatus(SyncStatus syncStatus) {
    this.syncStatus = syncStatus;
  }


  public NetworkStatusResponse peers(List<Peer> peers) {
    this.peers = peers;
    return this;
  }

  public NetworkStatusResponse addPeersItem(Peer peersItem) {
    if (this.peers == null) {
      this.peers = new ArrayList<>();
    }
    this.peers.add(peersItem);
    return this;
  }

   /**
   * Get peers
   * @return peers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PEERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Peer> getPeers() {
    return peers;
  }


  @JsonProperty(JSON_PROPERTY_PEERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeers(List<Peer> peers) {
    this.peers = peers;
  }


  /**
   * Return true if this NetworkStatusResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkStatusResponse networkStatusResponse = (NetworkStatusResponse) o;
    return Objects.equals(this.currentBlockIdentifier, networkStatusResponse.currentBlockIdentifier) &&
        Objects.equals(this.currentBlockTimestamp, networkStatusResponse.currentBlockTimestamp) &&
        Objects.equals(this.genesisBlockIdentifier, networkStatusResponse.genesisBlockIdentifier) &&
        Objects.equals(this.oldestBlockIdentifier, networkStatusResponse.oldestBlockIdentifier) &&
        Objects.equals(this.syncStatus, networkStatusResponse.syncStatus) &&
        Objects.equals(this.peers, networkStatusResponse.peers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentBlockIdentifier, currentBlockTimestamp, genesisBlockIdentifier, oldestBlockIdentifier, syncStatus, peers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkStatusResponse {\n");
    sb.append("    currentBlockIdentifier: ").append(toIndentedString(currentBlockIdentifier)).append("\n");
    sb.append("    currentBlockTimestamp: ").append(toIndentedString(currentBlockTimestamp)).append("\n");
    sb.append("    genesisBlockIdentifier: ").append(toIndentedString(genesisBlockIdentifier)).append("\n");
    sb.append("    oldestBlockIdentifier: ").append(toIndentedString(oldestBlockIdentifier)).append("\n");
    sb.append("    syncStatus: ").append(toIndentedString(syncStatus)).append("\n");
    sb.append("    peers: ").append(toIndentedString(peers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

