name: Docker

on:
  pull_request:
  push:
    branches:
      - main
      - release\/*

jobs:
  cancel_running_workflows:
    name: Cancel running workflows
    runs-on: ubuntu-22.04
    steps:
      - name: cancel running workflows
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

  build_deb:
    name: Build debian package
    runs-on: babylon-runner
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            eu.gcr.io/dev-container-repo/babylon-node
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}-deb
          restore-keys: ${{ runner.os }}-gradle-deb
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ secrets.GCR_EU_DEV_JSON_KEY }}
      - name: Create deb package
        run: |
            sudo apt-get update && sudo apt-get install make
            cd core && make build-core
      - name: Upload generated debian package
        uses: actions/upload-artifact@v3.1.0
        with:
          name: deb4docker
          path: "${{ github.workspace }}/docker/*.deb"


  build_push_container:
    name: Build core node docker container
    needs:
      - build_deb
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download generated debian package
        uses: actions/download-artifact@v3
        with:
          name: deb4docker
          path: docker
      - name: Display structure of downloaded files
        run: ls -R docker
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ secrets.GCR_EU_DEV_JSON_KEY }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: ./docker/Dockerfile.core
          context: docker
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ needs.build_deb.outputs.tags }}
          labels: ${{ needs.build_deb.outputs.labels }}
  trigger-ephemeral-deploy-and-test:
    runs-on: latest
    steps:
      - name: Deploy and test on ephemeral network
        uses: toptal/jenkins-job-trigger-action@master
        with:
          jenkins_url: "https://jenkins-preprod.radixdlt.com"
          jenkins_user: radixbot
          jenkins_token: ${{ secrets.BABYLON_NODE_JENKINS_API_TOKEN }}
          job_name: "ephemeral-deployment-test/job/testing-ephemeral-deploy-test-destroy/"
          job_timeout: "3600"
