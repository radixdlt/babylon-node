name: Docker v2

on:
  pull_request:
  # release:
  #   types: [published]
  # push:
  #   branches:
  #     - develop
  #     - main
  #     - release\/*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'release/')}}

# TODO: Configure the ARM build with a matrix

jobs:
  build_java:
    name: Build Java artifacts
    runs-on: ubuntu-latest-8-cores
    steps:
      - name: Checkout
        uses: RDXWorks-actions/checkout@main
      - name: Set up JDK 17
        uses: RDXWorks-actions/setup-java@main
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: RDXWorks-actions/gradle-cache-action@v2
        name: Build
        env:
          SKIP_NATIVE_RUST_BUILD: "TRUE"
          JAVA_TOOL_OPTIONS: "-Dfile.encoding=UTF8"
        with:
          job-id: jdk17
          arguments: clean build -x test
          gradle-version: wrapper
          # Properties are passed as -Pname=value
          properties: |
            ci=true
            rustBinaryBuildType=release
      - name: Extract artifacts
        run: |
          cd core/build/distributions
          unzip -j *.zip
      - name: Upload artifacts
        uses: RDXWorks-actions/upload-artifact-v4@main
        with:
          name: java-build-jars
          path: core/build/distributions/*.jar
          if-no-files-found: error
          retention-days: 1
          include-hidden-files: false
      - name: Upload core script
        uses: RDXWorks-actions/upload-artifact-v4@main
        with:
          name: java-build-core
          path: core/build/distributions/core
          if-no-files-found: error
          retention-days: 1
          include-hidden-files: false
  build_rust:
    name: Build libcorerust
    runs-on: ubuntu-latest-8-cores
    steps:
      - name: Checkout
        uses: RDXWorks-actions/checkout@main
      - name: Setup rust toolchain
        uses: RDXWorks-actions/rust-toolchain@1.77
      - name: Setup rust cache
        uses: RDXWorks-actions/rust-cache@master
        with:
          workspaces: core-rust
      - name: Install build dependencies
        run: |
          sudo apt-get update -qq && \
          sudo apt-get -qq -y --no-install-recommends install \
              build-essential \
              libclang-dev \
              libssl-dev \
              pkg-config
      - name: Build
        working-directory: core-rust
        run: |
          cargo build --profile=release
      - name: Upload artifacts
        uses: RDXWorks-actions/upload-artifact-v4@main
        with:
          name: rust-build-library
          path: core-rust/target/release/libcorerust.so
          if-no-files-found: error
          retention-days: 1
          include-hidden-files: false
  build_docker:
    name: Build docker image
    runs-on: ubuntu-latest
    needs:
      - build_java
      - build_rust
    steps:
      - name: Checkout
        uses: RDXWorks-actions/checkout@main
      - uses: RDXWorks-actions/download-artifact-v4@main
        name: Download java artifacts
        with:
          name: java-build-jars
          path: out-java-lib
      - uses: RDXWorks-actions/download-artifact-v4@main
        name: Download core script
        with:
          name: java-build-core
          path: out-java-core
      - uses: RDXWorks-actions/download-artifact-v4@main
        name: Download rust artifacts
        with:
          name: rust-build-library
          path: out-rust
      - run: |
          ls -l out-java-lib
          ls -l out-java-core
          ls -l out-rust
