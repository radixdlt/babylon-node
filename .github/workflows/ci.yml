name: Unit, integration tests and sonar

on:
  pull_request:
  push:
    branches:
      - main
      - release\/*
jobs:
  cancel_running_workflows:
    name: Cancel running workflows
    runs-on: ubuntu-22.04
    steps:
      - name: cancel running workflows
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
  build:
    name: Unit tests and sonarqube
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Install libclang-dev
        run: sudo apt-get update -y && sudo apt-get install -y libclang-dev
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Unit tests
        run: ./gradlew clean check jacocoTestReport --stacktrace --refresh-dependencies
      - name: Sonar analysis
        env:
          # Needed to get some information about the pull request, if any
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # SonarCloud access token should be generated from https://sonarcloud.io/account/security/
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube
  local-dev-sm-docker-build:
    name: Test core-rust docker build for local development
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Run local core-rust docker build
        run: ./gradlew :core-rust:buildRustForDocker
  steadystate-integration:
    name: Steady state integration tests
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Install libclang-dev
        run: sudo apt-get update -y && sudo apt-get install -y libclang-dev
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Run steady-state integration tests
        # If you need better logging, you should add --info to the below command to output application logs.
        #   This is useful to debug failures caused by an uncaught exception.
        #   In this case, the node calls System.exit(X), which appear in the integration test logs
        #   as something like:
        # "Process 'Gradle Test Executor 1' finished with non-zero exit value 255"
        run: ./gradlew clean runSteadyStateIntegrationTests --refresh-dependencies
  targeted-integration:
    name: Targeted integration tests
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Install libclang-dev
        run: sudo apt-get update -y && sudo apt-get install -y libclang-dev
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Run targeted integration tests
        # If you need better logging, you should add --info to the below command to output application logs.
        #   This is useful to debug failures caused by an uncaught exception.
        #   In this case, the node calls System.exit(X), which appear in the integration test logs
        #   as something like:
        # "Process 'Gradle Test Executor 1' finished with non-zero exit value 255"
        run: ./gradlew clean runTargetedIntegrationTests --refresh-dependencies --parallel
